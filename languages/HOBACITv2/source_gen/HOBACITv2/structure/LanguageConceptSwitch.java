package HOBACITv2.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Action = 0;
  public static final int ActionType = 1;
  public static final int AllOf = 2;
  public static final int AnyOf = 3;
  public static final int Apply = 4;
  public static final int AttributeAssignment = 5;
  public static final int AttributeDesignator = 6;
  public static final int AttributeValue = 7;
  public static final int Condition = 8;
  public static final int Environment = 9;
  public static final int EnvironmentType = 10;
  public static final int Function = 11;
  public static final int Match = 12;
  public static final int Policy = 13;
  public static final int PolicySet = 14;
  public static final int Resource = 15;
  public static final int ResourceType = 16;
  public static final int Rule = 17;
  public static final int Subject = 18;
  public static final int SubjectType = 19;
  public static final int Target = 20;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x3fbb45ee81da477eL, 0xba7df1b8ec591273L);
    builder.put(0x36d641ea276bb406L, Action);
    builder.put(0x36d641ea276cb6f0L, ActionType);
    builder.put(0x36d641ea276d4f25L, AllOf);
    builder.put(0x36d641ea276d479dL, AnyOf);
    builder.put(0x36d641ea276ba405L, Apply);
    builder.put(0x36d641ea276d6baaL, AttributeAssignment);
    builder.put(0x36d641ea276c516aL, AttributeDesignator);
    builder.put(0x36d641ea276c3402L, AttributeValue);
    builder.put(0x36d641ea276b9e1eL, Condition);
    builder.put(0x36d641ea276bc97cL, Environment);
    builder.put(0x36d641ea276cfab1L, EnvironmentType);
    builder.put(0x36d641ea276d665eL, Function);
    builder.put(0x36d641ea276d54beL, Match);
    builder.put(0x36d641ea276b7ddbL, Policy);
    builder.put(0x36d641ea276b77f4L, PolicySet);
    builder.put(0x36d641ea276baf08L, Resource);
    builder.put(0x36d641ea276cde66L, ResourceType);
    builder.put(0x36d641ea276b8152L, Rule);
    builder.put(0x36d641ea276ba96bL, Subject);
    builder.put(0x36d641ea276c95dcL, SubjectType);
    builder.put(0x36d641ea276b9907L, Target);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
